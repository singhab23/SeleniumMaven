<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="8" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-21T10:30:09 CDT" name="Suite" finished-at="2023-07-21T10:30:39 CDT" duration-ms="30095">
    <groups>
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" name="submitOrder" class="BR.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginPageErrorValidation()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" name="loginPageErrorValidation" class="BR.Tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
    </groups>
    <test started-at="2023-07-21T10:30:09 CDT" name="Error Validation" finished-at="2023-07-21T10:30:32 CDT" duration-ms="22977">
      <class name="BR.Tests.ErrorValidationsTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:09 CDT" name="launchApplication" finished-at="2023-07-21T10:30:14 CDT" duration-ms="5217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginPageErrorValidation()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:14 CDT" name="loginPageErrorValidation" finished-at="2023-07-21T10:30:15 CDT" duration-ms="1241" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at BR.Tests.ErrorValidationsTest.loginPageErrorValidation(ErrorValidationsTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPageErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:15 CDT" name="tearDown" finished-at="2023-07-21T10:30:15 CDT" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:15 CDT" name="launchApplication" finished-at="2023-07-21T10:30:20 CDT" duration-ms="4122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginPageErrorValidation()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:20 CDT" name="loginPageErrorValidation" finished-at="2023-07-21T10:30:21 CDT" duration-ms="1745" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at BR.Tests.ErrorValidationsTest.loginPageErrorValidation(ErrorValidationsTest.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPageErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:22 CDT" name="tearDown" finished-at="2023-07-21T10:30:22 CDT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:22 CDT" name="launchApplication" finished-at="2023-07-21T10:30:26 CDT" duration-ms="4454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:26 CDT" name="productErrorValidation" finished-at="2023-07-21T10:30:32 CDT" duration-ms="5422" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at BR.Tests.ErrorValidationsTest.productErrorValidation(ErrorValidationsTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.ErrorValidationsTest@609e8838]" started-at="2023-07-21T10:30:32 CDT" name="tearDown" finished-at="2023-07-21T10:30:32 CDT" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- BR.Tests.ErrorValidationsTest -->
    </test> <!-- Error Validation -->
    <test started-at="2023-07-21T10:30:09 CDT" name="Submit Order" finished-at="2023-07-21T10:30:39 CDT" duration-ms="30095">
      <class name="BR.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:09 CDT" name="launchApplication" finished-at="2023-07-21T10:30:14 CDT" duration-ms="4813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:14 CDT" name="submitOrder" data-provider="getData" finished-at="2023-07-21T10:30:19 CDT" duration-ms="5383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Rayleigh@23, product=ZARA COAT 3, email=abc802386@mail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:19 CDT" name="tearDown" finished-at="2023-07-21T10:30:19 CDT" duration-ms="119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:19 CDT" name="launchApplication" finished-at="2023-07-21T10:30:22 CDT" duration-ms="2998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:22 CDT" name="submitOrder" data-provider="getData" finished-at="2023-07-21T10:30:28 CDT" duration-ms="5325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=January@23, product=ADIDAS ORIGINAL, email=json@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:28 CDT" name="tearDown" finished-at="2023-07-21T10:30:28 CDT" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:28 CDT" name="launchApplication" finished-at="2023-07-21T10:30:32 CDT" duration-ms="4425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistory(java.util.HashMap)[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:32 CDT" name="orderHistory" data-provider="getData" finished-at="2023-07-21T10:30:34 CDT" depends-on-methods="BR.Tests.SubmitOrderTest.submitOrder" duration-ms="1621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Rayleigh@23, product=ZARA COAT 3, email=abc802386@mail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:34 CDT" name="tearDown" finished-at="2023-07-21T10:30:34 CDT" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:34 CDT" name="launchApplication" finished-at="2023-07-21T10:30:37 CDT" duration-ms="3017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="orderHistory(java.util.HashMap)[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:37 CDT" name="orderHistory" data-provider="getData" finished-at="2023-07-21T10:30:39 CDT" depends-on-methods="BR.Tests.SubmitOrderTest.submitOrder" duration-ms="1971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=January@23, product=ADIDAS ORIGINAL, email=json@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BR.Tests.SubmitOrderTest@34bde49d]" started-at="2023-07-21T10:30:39 CDT" name="tearDown" finished-at="2023-07-21T10:30:39 CDT" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- BR.Tests.SubmitOrderTest -->
    </test> <!-- Submit Order -->
  </suite> <!-- Suite -->
</testng-results>
